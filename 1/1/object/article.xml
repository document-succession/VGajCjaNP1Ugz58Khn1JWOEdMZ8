<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.2 20190208//EN"
                  "JATS-archivearticle1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" dtd-version="1.2" article-type="other">
<front>
<journal-meta>
<journal-id></journal-id>
<journal-title-group>
</journal-title-group>
<issn></issn>
<publisher>
<publisher-name></publisher-name>
</publisher>
</journal-meta>
<article-meta>
<title-group>
<article-title>Document Succession Git Layout</article-title>
</title-group>
<contrib-group>
<contrib contrib-type="author">
<contrib-id contrib-id-type="orcid">https://orcid.org/0000-0002-5014-4809</contrib-id>
<name>
<surname>Ellerman</surname>
<given-names>E. Castedo</given-names>
</name>
<email>castedo@castedo.com</email>
</contrib>
</contrib-group>
<pub-date date-type="pub" publication-format="electronic" iso-8601-date="2024-02-20">
<day>20</day>
<month>2</month>
<year>2024</year>
</pub-date>
<permissions>
<copyright-statement>Â© 2024, Ellerman et al</copyright-statement>
<copyright-year>2024</copyright-year>
<copyright-holder>Ellerman et al</copyright-holder>
<license license-type="open-access">
<ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
<license-p>This document is distributed under a Creative Commons Attribution 4.0 International license.</license-p>
</license>
</permissions>
<abstract>
<p><bold>DOCUMENT TYPE</bold>: Living Technical Specification</p>
<p>A document succession is a distributed, correctable document that preserves document
snapshots as editions, which can be individually referenced.
The Document Succession Git Layout (DSGL) is a format for storing document successions
within a Git object store.
DSGL bridges two related formats: the textual representation of
<ext-link ext-link-type="uri" xlink:href="https://perm.pub/1wFGhvmv8XZfPx0O5Hya2e9AyXo">Document Succession Identifiers (DSI)</ext-link>
and the storage format for document snapshots.
An example of a snapshot format is the format for Baseprint document snapshots;
however, this specification does not define any specific format for document snapshots.</p>
</abstract>
</article-meta>
</front>
<body>
<sec id="background">
  <title>Background</title>
  <p>Websites like <ext-link ext-link-type="uri" xlink:href="https://perm.pub">https://perm.pub</ext-link>
  use free open-source software, such as the Python package
  <ext-link ext-link-type="uri" xlink:href="https://gitlab.com/perm.pub/epijats">Epijats</ext-link>,
  to process the formats of
  Document Succession Git Layout (DSGL),
  <ext-link ext-link-type="uri" xlink:href="https://perm.pub/1wFGhvmv8XZfPx0O5Hya2e9AyXo">Document Succession Identifiers (DSI)</ext-link>,
  and Baseprint document snapshots.
  For the motivation behind these technologies,
  refer to <ext-link ext-link-type="uri" xlink:href="https://perm.pub/wk1LzCaCSKkIvLAYObAvaoLNGPc">Why Publish Baseprint Document Successions</ext-link>.
  Tutorials and introductory materials are also available at
  <ext-link ext-link-type="uri" xlink:href="https://try.perm.pub">https://try.perm.pub/</ext-link>.</p>
</sec>
<sec id="scope">
  <title>Scope</title>
  <p>This document is a specification of DSGL for interoperability with the following
  reference implementations:</p>
  <list list-type="bullet">
    <list-item>
      <p>the Python package <ext-link ext-link-type="uri" xlink:href="https://pypi.org/project/hidos/">Hidos</ext-link> version 1.3 <xref alt="1" rid="ref-hidosU003A1.3" ref-type="bibr">1</xref> and</p>
    </list-item>
    <list-item>
      <p>the <ext-link ext-link-type="uri" xlink:href="https://manual.perm.pub">Document Succession Highly Manual Toolkit</ext-link> <xref alt="2" rid="ref-dshmtm" ref-type="bibr">2</xref>.</p>
    </list-item>
  </list>
  <p>This specification excludes potential DSGL features that are not implemented in
  any software.
  The online forum <ext-link ext-link-type="uri" xlink:href="https://baseprints.singlesource.pub">https://baseprints.singlesource.pub</ext-link> is available for proposals
  of improvements to this living specification and its reference implementations.</p>
  <p>DSI in this specification refers to <ext-link ext-link-type="uri" xlink:href="https://perm.pub/1wFGhvmv8XZfPx0O5Hya2e9AyXo/2">edition 2 of the Document Succession
  Identifier specification</ext-link>.</p>
  <sec id="signed-successions">
    <title>Signed Successions</title>
    <p>This specification focuses on document successions that are digitally signed.
    <italic>Unsigned</italic> document successions fall outside the scope of this edition of the
    DSGL specification.
    While unsigned document successions may be useful for testing and learning,
    they are not essential for interoperability.</p>
  </sec>
  <sec id="ungarbled-successions">
    <title>Ungarbled Successions</title>
    <p>This specification defines DSGL for <italic>ungarbled</italic> recordings.
    These <italic>ungarbled</italic> recordings, which have a simple and intuitive format, are most likely to interoperate.
    Reality and non-ideal circumstances sometimes result in <italic>garbled</italic> recordings,
    which software may handle with varying degrees of success.
    This specification assumes document successions are <italic>ungarbled</italic>, unless otherwise noted.</p>
  </sec>
</sec>
<sec id="informal-description">
  <title>Informal Description</title>
  <sec id="initial-git-commit">
    <title>Initial Git Commit</title>
    <p>A document succession consists of a Git commit history with a single initial commit.
    The base DSI of the document succession is the base64url (RFC 4648)<xref alt="3" rid="ref-rfc4648" ref-type="bibr">3</xref>
    representation of the 20-byte binary Git hash of the initial commit.
    An <italic>ungarbled</italic> document succession has a linear Git commit history.</p>
  </sec>
  <sec id="signatures">
    <title>Signatures</title>
    <p>Every Git commit tree in DSGL contains a <monospace>signed_succession</monospace> subdirectory
    that includes an <monospace>allowed_signers</monospace> file listing the public keys
    allowed to extend the document succession.
    Each non-initial commit is signed with an SSH key listed in the <monospace>allowed_signers</monospace> files of
    all its parent commits.</p>
    <p><bold>Example</bold>: Initial Git commit in DSGL.</p>
    <disp-quote>
      <p><ext-link ext-link-type="uri" xlink:href="https://github.com/document-succession/1wFGhvmv8XZfPx0O5Hya2e9AyXo/commit/d7014686f9aff1765f3f1d0ee47c9ad9ef40c97a">https://github.com/document-succession/1wFGhvmv8XZfPx0O5Hya2e9AyXo/commit/d7014686f9aff1765f3f1d0ee47c9ad9ef40c97a</ext-link></p>
    </disp-quote>
    <disp-quote>
      <p><ext-link ext-link-type="uri" xlink:href="https://archive.softwareheritage.org/swh:1:rev:d7014686f9aff1765f3f1d0ee47c9ad9ef40c97a">https://archive.softwareheritage.org/swh:1:rev:d7014686f9aff1765f3f1d0ee47c9ad9ef40c97a</ext-link></p>
    </disp-quote>
  </sec>
  <sec id="document-snapshot">
    <title>Document Snapshot</title>
    <p>A document snapshot in DSGL is a digital object
    that can be encoded as either a Git blob or a Git tree.
    The contents of each document snapshot are stored in an entry named <monospace>object</monospace> within a
    containing Git tree.
    The full path from the Git commit tree mirrors the edition number,
    with slashes separating integers instead of periods.
    For example,
    the directory containing the contents of a document snapshot for edition 2.1
    would be stored in a Git tree at the path <monospace>2/1/object</monospace>.</p>
    <p><bold>Example</bold>: Git commit tree of document succession with edition 2.1.</p>
    <disp-quote>
      <p><ext-link ext-link-type="uri" xlink:href="https://github.com/document-succession/1wFGhvmv8XZfPx0O5Hya2e9AyXo/tree/f174a4f4cc3076b0f46980878c4208cbfcdb990b">https://github.com/document-succession/1wFGhvmv8XZfPx0O5Hya2e9AyXo/tree/f174a4f4cc3076b0f46980878c4208cbfcdb990b</ext-link></p>
    </disp-quote>
    <disp-quote>
      <p><ext-link ext-link-type="uri" xlink:href="https://archive.softwareheritage.org/swh:1:dir:361534f2bcf78e6312a32916469e4720c7c9bb6f">https://archive.softwareheritage.org/swh:1:dir:361534f2bcf78e6312a32916469e4720c7c9bb6f</ext-link></p>
    </disp-quote>
  </sec>
</sec>
<sec id="formal-definitions">
  <title>Formal Definitions</title>
  <sec id="criteria-for-a-document-succession-in-dsgl">
    <title>Criteria for a Document Succession in DSGL</title>
    <p><bold>Criterion</bold>:
    The data of a document succession are fully recorded by a connected graph of Git commit
    records.</p>
    <p><bold>Criterion</bold>:
    There is only one initial Git commit (a commit without parents) in the graph of Git
    commit records. The 20-byte binary hash of this initial Git commit is the hash
    used for the base DSI of the document succession.</p>
    <p><bold>Criterion</bold>:
    All document snapshots are stored as a Git blob or Git tree with the name <monospace>object</monospace>
    (in its containing Git tree).</p>
    <p><bold>Criterion</bold>:
    The Git tree containing an <monospace>object</monospace> entry is not
    the top-level Git commit tree and is named with a positive integer.</p>
    <p><bold>Criterion</bold>:
    The full path to the containing tree of an <monospace>object</monospace> entry for a document snapshot
    consists of non-negative integers separated by slashes.
    These non-negative integers correspond to the non-negative integers separated
    by periods in the DSI.</p>
    <p><bold>Criterion</bold>:
    The document snapshot assigned to an edition number is the first Git blob or tree
    committed to an <monospace>object</monospace> entry following the path corresponding to the edition number.
    Any subsequent <monospace>object</monospace> entries at this path do not change the DSI assignment.</p>
  </sec>
  <sec id="criteria-for-a-signed-document-succession-in-dsgl">
    <title>Criteria for a <bold>Signed</bold> Document Succession in DSGL</title>
    <p><bold>Criterion</bold>:
    The Git tree of every Git commit record has an <monospace>allowed_signers</monospace> file within the
    <monospace>signed_succession</monospace> directory.</p>
    <p><bold>Criterion</bold>:
    The <monospace>allowed_signers</monospace> file consists of zero or more lines of four fields separated by
    space.
    The second field is <monospace>namespaces=&quot;git&quot;</monospace>,
    the third field is an OpenSSH compatible key type, and the fourth field is a
    base64-encoded public key.</p>
    <p><bold>Criterion</bold>:
    Every commit with parents is signed with an SSH key with the public key
    listed in the <monospace>allowed_signers</monospace> file of all parent commits.</p>
  </sec>
  <sec id="criteria-for-an-ungarbled-document-succession-in-dsgl">
    <title>Criteria for an <bold>Ungarbled</bold> Document Succession in DSGL</title>
    <p><bold>Criterion</bold>:
    The graph of Git commit records is linear.</p>
    <p><bold>Criterion</bold>:
    The initial commit is signed with an SSH key that is listed in the <monospace>allowed_signers</monospace>
    file within the <monospace>signed_succession</monospace> directory.</p>
    <p><bold>Criterion</bold>:
    The first field of all lines in the <monospace>allowed_signers</monospace> files is the character <monospace>*</monospace>.</p>
    <p><bold>Criterion</bold>:
    The third field of all lines in the <monospace>allowed_signers</monospace> files is the key type
    <monospace>ssh-ed25519</monospace>.</p>
    <p><bold>Criterion</bold>:
    All paths of all Git commit trees match the EBNF grammar for DSGL Paths (definition
    follows).</p>
    <p><bold>Criterion</bold>:
    Every <monospace>object</monospace> entry is only added once in the commit history.</p>
    <p><bold>Criterion</bold>:
    There are no two <monospace>object</monospace> entries whose paths correspond to edition numbers that are
    above or below each other (for example, <monospace>1/object</monospace> and <monospace>1/2/object</monospace> are not both
    present).
    In other words,
    if a Git tree directly contains an <monospace>object</monospace> entry,
    then it is the only direct entry in that Git tree.</p>
  </sec>
  <sec id="dsgl-paths-in-extended-backusnaur-form-ebnf">
    <title>DSGL Paths in Extended BackusâNaur Form (EBNF)</title>
    <p>The following grammar is expressed in ISO/IEC 14977
    <ext-link ext-link-type="uri" xlink:href="https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form">Extended BackusâNaur Form (EBNF)</ext-link>
    extended further to allow an ellipsis (<monospace>â¦</monospace>) to denote a range of ASCII characters.</p>
    <preformat>path = &quot;signed_succession/allowed_signers&quot; | snapshot ;
snapshot = { non_neg_int, &quot;/&quot; }, pos_int, &quot;/object&quot; ;
non_neg_int = &quot;0&quot; | pos_int ;
pos_int = pos_dec_digit, { dec_digit } ;
dec_digit = &quot;0&quot; | pos_dec_digit ;
pos_dec_digit = &quot;1&quot;â¦&quot;9&quot; ;</preformat>
  </sec>
</sec>
<sec id="discussion">
  <title>Discussion</title>
  <sec id="control-of-document-successions">
    <title>Control of Document Successions</title>
    <p>As long as authors of document successions maintain control over the allowed private SSH
    signing keys,
    a signed document succession can be moved and distributed across any Git-compatible servers,
    yet only the authors can extend the document succession with new editions.
    The capability to extend a signed document succession hinges on control of allowed private SSH signing keys,
    rather than control over specific accounts or servers.</p>
  </sec>
  <sec id="related-concepts">
    <title>Related Concepts</title>
    <p>A <italic>Document Succession Identifier</italic> is an
    <ext-link ext-link-type="uri" xlink:href="https://www.softwareheritage.org/2020/07/09/intrinsic-vs-extrinsic-identifiers">intrinsic identifier</ext-link>
    <xref alt="4" rid="ref-intrinsic_extrinsic_identifiers" ref-type="bibr">4</xref> <xref alt="5" rid="ref-cosmo_referencing_2020" ref-type="bibr">5</xref> <xref alt="6" rid="ref-dicosmoU003Ahal-01865790" ref-type="bibr">6</xref>
    of the initial Git commit.</p>
  </sec>
  <sec id="design-choice-rationales">
    <title>Design Choice Rationales</title>
    <sec id="separation-of-git-history-from-edition-history">
      <title>Separation of Git History from Edition History</title>
      <p>Representing the history of editions through means other than Git commit history
      is a deliberate design choice.
      Git commit history records all Git actions,
      which can lead to inflexible and complicated non-linear histories.
      Software Heritage automatically preserves Git commits,
      increasing the risk that a Git commit history could become
      an unintended complicated non-linear history.
      Non-linear Git commit histories and merge commits might be useful in certain scenarios.</p>
      <p>Separating edition history from Git commit history also allows
      for future enhancements, such as retracting specific editions.</p>
    </sec>
    <sec id="use-of-git-tree-paths-instead-of-git-tags">
      <title>Use of Git Tree Paths Instead of Git Tags</title>
      <p>In document successions, edition numbers are akin to software release versions,
      which are typically identified using Git tags.
      However, this specification adopts a different approach.
      Edition numbers are recorded with file paths in Git trees rather than Git tags.
      With this approach, a single latest Git commit captures a complete record of a document succession.
      This means copying document successions is as easy as copying Git branches.
      This is especially useful when consolidating records from multiple sources into a single Git repository.</p>
      <p>In contrast, software projects, which often include release tags,
      are copied by cloning the entire repository.
      Using Git tags for edition numbers would
      introduce the complexity of keeping a branch and edition number tags in sync,
      thereby increasing the risk of problems during copying.</p>
      <p>While branches in Git repositories are useful for managing document successions,
      branch names do not constitute a part of the document succession record.</p>
    </sec>
  </sec>
</sec>
<sec id="acknowledgments">
  <title>Acknowledgments</title>
  <p>Thank you to Valentin Lorentz for raising questions about design choices
  and pointing out an important shortcoming in how GPG digital signatures were used
  in the initial Git implementation of the Hidos library (version 0.3) <xref alt="7" rid="ref-hidosU003A0.3" ref-type="bibr">7</xref>.</p>
  <p>This document has been copyedited with AI using <ext-link ext-link-type="uri" xlink:href="https://copyaid.it">https://copyaid.it</ext-link>.</p>
</sec>
<sec id="history">
  <title>History</title>
  <list list-type="bullet">
    <list-item>
      <p>Copied Git storage specifics from <ext-link ext-link-type="uri" xlink:href="https://perm.pub/1wFGhvmv8XZfPx0O5Hya2e9AyXo/2.1">edition 2.1 of the DSI
      specification</ext-link>.</p>
    </list-item>
  </list>
</sec>
</body>
<back>
<ref-list>
  <title>References</title>
  <ref id="ref-cosmo_referencing_2020">
    <element-citation publication-type="article-journal">
      <person-group person-group-type="author">
        <name><surname>Cosmo</surname><given-names>Roberto Di</given-names></name>
        <name><surname>Gruenpeter</surname><given-names>Morane</given-names></name>
        <name><surname>Zacchiroli</surname><given-names>Stefano</given-names></name>
      </person-group>
      <article-title>Referencing Source Code Artifacts: A Separate Concern in Software Citation</article-title>
      <source>Computing in Science &amp; Engineering</source>
      <year iso-8601-date="2020-03">2020</year><month>03</month>
      <date-in-citation content-type="access-date"><year iso-8601-date="2022-09-05">2022</year><month>09</month><day>05</day></date-in-citation>
      <volume>22</volume>
      <issue>2</issue>
      <issn>1521-9615, 1558-366X</issn>
      <uri>https://ieeexplore.ieee.org/document/8946737/</uri>
      <pub-id pub-id-type="doi">10.1109/MCSE.2019.2963148</pub-id>
      <fpage>33</fpage>
      <lpage>43</lpage>
    </element-citation>
  </ref>
  <ref id="ref-dicosmoU003Ahal-01865790">
    <element-citation publication-type="paper-conference">
      <person-group person-group-type="author">
        <name><surname>Di Cosmo</surname><given-names>Roberto</given-names></name>
        <name><surname>Gruenpeter</surname><given-names>Morane</given-names></name>
        <name><surname>Zacchiroli</surname><given-names>Stefano</given-names></name>
      </person-group>
      <article-title>Identifiers for Digital Objects: the Case of Software Source Code Preservation</article-title>
      <source>iPRES 2018 - 15th International Conference on Digital Preservation</source>
      <publisher-loc>Boston, United States</publisher-loc>
      <year iso-8601-date="2018-09">2018</year><month>09</month>
      <uri>https://hal.archives-ouvertes.fr/hal-01865790</uri>
      <fpage>1</fpage>
      <lpage>9</lpage>
    </element-citation>
  </ref>
  <ref id="ref-rfc4648">
    <element-citation publication-type="report">
      <person-group person-group-type="author">
        <name><surname>Josefsson</surname><given-names>S.</given-names></name>
      </person-group>
      <article-title>The Base16, Base32, and Base64 data encodings</article-title>
      <publisher-name>RFC Editor; Internet Requests for Comments; RFC Editor</publisher-name>
      <year iso-8601-date="2006-10">2006</year><month>10</month>
      <issn>2070-1721</issn>
      <uri>https://www.rfc-editor.org/info/rfc4648</uri>
      <pub-id pub-id-type="doi">10.17487/RFC4648</pub-id>
    </element-citation>
  </ref>
  <ref id="ref-intrinsic_extrinsic_identifiers">
    <element-citation publication-type="webpage">
      <person-group person-group-type="author">
        <name><surname>Heritage</surname><given-names>Software</given-names></name>
      </person-group>
      <article-title>Intrinsic and extrinsic identifiers</article-title>
      <year iso-8601-date="2020">2020</year>
      <uri>https://web.archive.org/web/20221019201056/https://www.softwareheritage.org/2020/07/09/intrinsic-vs-extrinsic-identifiers/</uri>
    </element-citation>
  </ref>
  <ref id="ref-hidosU003A0.3">
    <element-citation>
      <person-group person-group-type="author">
        <string-name>Hidos contributors</string-name>
      </person-group>
      <article-title>Hidos 0.3</article-title>
      <year iso-8601-date="2022">2022</year>
      <uri>https://archive.softwareheritage.org/swh:1:rev:b963e5d2366724df6e8c34d864a7984ce4a2e1be;origin=https://gitlab.com/perm.pub/hidos</uri>
    </element-citation>
  </ref>
  <ref id="ref-hidosU003A1.3">
    <element-citation>
      <person-group person-group-type="author">
        <string-name>Hidos contributors</string-name>
      </person-group>
      <article-title>Hidos 1.3</article-title>
      <year iso-8601-date="2024">2024</year>
      <uri>https://archive.softwareheritage.org/swh:1:rev:0c997b13a255be2a83f150371c9364a1217fa91a;origin=https://gitlab.com/perm.pub/hidos</uri>
    </element-citation>
  </ref>
  <ref id="ref-dshmtm">
    <element-citation>
      <person-group person-group-type="author">
        <string-name>DSHMTM contributors</string-name>
      </person-group>
      <article-title>Document succession highly manual toolkit manual</article-title>
      <year iso-8601-date="2024">2024</year>
      <uri>https://archive.softwareheritage.org/swh:1:rev:f6da04dce5f53d88c4c324c1d2546110a8d42d8a;origin=https://gitlab.com/perm.pub/dshmtm</uri>
    </element-citation>
  </ref>
</ref-list>
</back>
</article>
